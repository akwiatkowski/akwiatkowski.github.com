// Generated by CoffeeScript 1.10.0
var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

this.BlogPlanner = (function() {
  function BlogPlanner() {
    this.processPosts = bind(this.processPosts, this);
    this.processLands = bind(this.processLands, this);
  }

  BlogPlanner.prototype.start = function() {
    this.lands_posts = {};
    this.lands = [];
    this.land_outputs = [];
    return $.ajax({
      url: "/payload.json",
      success: (function(_this) {
        return function(data) {
          _this.data = data;
          _this.processLands();
          _this.processPosts();
          return _this.startPlanner();
        };
      })(this)
    });
  };

  BlogPlanner.prototype.processLands = function() {
    var i, land, len, post, ref, results, s;
    ref = this.data["lands"];
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      land = ref[i];
      if (land["type"] === "mountain") {
        s = land["slug"];
        if (this.lands_posts[s] === void 0) {
          this.lands.push(land);
          this.lands_posts[s] = [];
        }
        results.push((function() {
          var j, len1, ref1, results1;
          ref1 = this.data["posts"];
          results1 = [];
          for (j = 0, len1 = ref1.length; j < len1; j++) {
            post = ref1[j];
            if (indexOf.call(post["lands"], s) >= 0) {
              results1.push(this.lands_posts[s].push(post));
            } else {
              results1.push(void 0);
            }
          }
          return results1;
        }).call(this));
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  BlogPlanner.prototype.processPosts = function() {
    var currentDate, date, h, i, j, land, len, len1, monthMs, month_diff, months_since, post, posts, ref, s, visit_count, visit_months_since, visit_within_1_months, visit_within_2_months, visit_within_3_months;
    currentDate = new Date();
    monthMs = 30 * 24 * 3600 * 1000;
    ref = this.lands;
    for (i = 0, len = ref.length; i < len; i++) {
      land = ref[i];
      s = land["slug"];
      posts = this.lands_posts[s];
      visit_count = 0;
      visit_within_1_months = 0;
      visit_within_2_months = 0;
      visit_within_3_months = 0;
      visit_months_since = Infinity;
      for (j = 0, len1 = posts.length; j < len1; j++) {
        post = posts[j];
        visit_count += 1;
        date = new Date(post["date"]);
        month_diff = date.getMonth() - currentDate.getMonth();
        if (month_diff < 0) {
          month_diff += 12;
        }
        if (month_diff <= 1) {
          visit_within_1_months += 1;
        }
        if (month_diff <= 2) {
          visit_within_2_months += 1;
        }
        if (month_diff <= 3) {
          visit_within_3_months += 1;
        }
        months_since = Math.round((currentDate.getTime() - date.getTime()) / monthMs);
        if (months_since < visit_months_since) {
          visit_months_since = months_since;
        }
      }
      h = {};
      h["slug"] = s;
      h["name"] = land["name"];
      h["visit_count"] = visit_count;
      h["visit_within_1_months"] = visit_within_1_months;
      h["visit_within_2_months"] = visit_within_2_months;
      h["visit_within_3_months"] = visit_within_3_months;
      if (visit_months_since !== Infinity) {
        h["visit_months_since"] = visit_months_since;
      } else {
        h["visit_months_since"] = "---";
      }
      this.land_outputs.push(h);
    }
    return console.log(this.land_outputs);
  };

  BlogPlanner.prototype.startPlanner = function() {
    var i, len, lo, main_object, ref, results, s;
    $("#content").html("");
    main_object = $("<table>", {
      id: "planner-table",
      "class": "planner-table"
    }).appendTo("#content");
    s = "<tr>";
    s += "<th>Nazwa</th>";
    s += "<th>Wizyt (dni)</th>";
    s += "<th>1msc</th>";
    s += "<th>2msc</th>";
    s += "<th>3msc</th>";
    s += "<th>MiesiÄ™cy temu</th>";
    s += "</tr>";
    $(s).appendTo(main_object);
    ref = this.land_outputs;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      lo = ref[i];
      s = "<tr>";
      s += "<td>" + lo["name"] + "</td>";
      s += "<td>" + lo["visit_count"] + "</td>";
      s += "<td>" + lo["visit_within_1_months"] + "</td>";
      s += "<td>" + lo["visit_within_2_months"] + "</td>";
      s += "<td>" + lo["visit_within_3_months"] + "</td>";
      s += "<td>" + lo["visit_months_since"] + "</td>";
      s += "</tr>";
      results.push($(s).appendTo(main_object));
    }
    return results;
  };

  return BlogPlanner;

})();
